#pragma once

#include "RenderDefine.h"

namespace Neutron
{
	namespace Engine
	{
		namespace Render
		{
			// render graph node
			CREATE_STRING_STUB( RGN, inputStream );
			CREATE_STRING_STUB( RGN, cbuffer );
			CREATE_STRING_STUB( RGN, texture1D );
			CREATE_STRING_STUB( RGN, texture2D );
			CREATE_STRING_STUB( RGN, texture3D );
			CREATE_STRING_STUB( RGN, textureCube );
			CREATE_STRING_STUB( RGN, sampler );
			CREATE_STRING_STUB( RGN, shaderVS );
			CREATE_STRING_STUB( RGN, shaderHS );
			CREATE_STRING_STUB( RGN, shaderDS );
			CREATE_STRING_STUB( RGN, shaderGS );
			CREATE_STRING_STUB( RGN, shaderPS );
			CREATE_STRING_STUB( RGN, shaderCS );
			CREATE_STRING_STUB( RGN, pipeline );

			// render graph keyword
			CREATE_STRING_STUB( RGK, name );
			CREATE_STRING_STUB( RGK, semantic );
			CREATE_STRING_STUB( RGK, parameter );
			CREATE_STRING_STUB( RGK, variableType );
			CREATE_STRING_STUB( RGK, accessHint );
			CREATE_STRING_STUB( RGK, width );
			CREATE_STRING_STUB( RGK, height );
			CREATE_STRING_STUB( RGK, depth );
			CREATE_STRING_STUB( RGK, format );
			CREATE_STRING_STUB( RGK, mips );
			CREATE_STRING_STUB( RGK, arraySize );
			CREATE_STRING_STUB( RGK, sampleCount );
			CREATE_STRING_STUB( RGK, sampleQuality );
			CREATE_STRING_STUB( RGK, filterType );

			// format
			CREATE_STRING_STUB( PF, UNKNOWN );
			CREATE_STRING_STUB( PF, A8UN );
			CREATE_STRING_STUB( PF, R8UN );
			CREATE_STRING_STUB( PF, R8SN );
			CREATE_STRING_STUB( PF, R8U );
			CREATE_STRING_STUB( PF, R8S );
			CREATE_STRING_STUB( PF, R8F );
			CREATE_STRING_STUB( PF, RG8UN );
			CREATE_STRING_STUB( PF, RG8SN );
			CREATE_STRING_STUB( PF, RG8U );
			CREATE_STRING_STUB( PF, RG8S );
			CREATE_STRING_STUB( PF, RG8F );
			CREATE_STRING_STUB( PF, RGB8UN );
			CREATE_STRING_STUB( PF, RGB8SN );
			CREATE_STRING_STUB( PF, RGB8U );
			CREATE_STRING_STUB( PF, RGB8S );
			CREATE_STRING_STUB( PF, RGB8F );
			CREATE_STRING_STUB( PF, RGBA8UN );
			CREATE_STRING_STUB( PF, RGBA8SN );
			CREATE_STRING_STUB( PF, RGBA8U );
			CREATE_STRING_STUB( PF, RGBA8S );
			CREATE_STRING_STUB( PF, RGBA8SRGB );
			CREATE_STRING_STUB( PF, R16UN );
			CREATE_STRING_STUB( PF, R16SN );
			CREATE_STRING_STUB( PF, R16U );
			CREATE_STRING_STUB( PF, R16S );
			CREATE_STRING_STUB( PF, R16F );
			CREATE_STRING_STUB( PF, RG16UN );
			CREATE_STRING_STUB( PF, RG16SN );
			CREATE_STRING_STUB( PF, RG16U );
			CREATE_STRING_STUB( PF, RG16S );
			CREATE_STRING_STUB( PF, RG16F );
			CREATE_STRING_STUB( PF, RGB16UN );
			CREATE_STRING_STUB( PF, RGB16SN );
			CREATE_STRING_STUB( PF, RGB16U );
			CREATE_STRING_STUB( PF, RGB16S );
			CREATE_STRING_STUB( PF, RGB16F );
			CREATE_STRING_STUB( PF, RGBA16UN );
			CREATE_STRING_STUB( PF, RGBA16SN );
			CREATE_STRING_STUB( PF, RGBA16U );
			CREATE_STRING_STUB( PF, RGBA16S );
			CREATE_STRING_STUB( PF, RGBA16F );
			CREATE_STRING_STUB( PF, R32UN );
			CREATE_STRING_STUB( PF, R32SN );
			CREATE_STRING_STUB( PF, R32U );
			CREATE_STRING_STUB( PF, R32S );
			CREATE_STRING_STUB( PF, R32F );
			CREATE_STRING_STUB( PF, RG32UN );
			CREATE_STRING_STUB( PF, RG32SN );
			CREATE_STRING_STUB( PF, RG32U );
			CREATE_STRING_STUB( PF, RG32S );
			CREATE_STRING_STUB( PF, RG32F );
			CREATE_STRING_STUB( PF, RGB32UN );
			CREATE_STRING_STUB( PF, RGB32SN );
			CREATE_STRING_STUB( PF, RGB32U );
			CREATE_STRING_STUB( PF, RGB32S );
			CREATE_STRING_STUB( PF, RGB32F );
			CREATE_STRING_STUB( PF, RGBA32UN );
			CREATE_STRING_STUB( PF, RGBA32SN );
			CREATE_STRING_STUB( PF, RGBA32U );
			CREATE_STRING_STUB( PF, RGBA32S );
			CREATE_STRING_STUB( PF, RGBA32F );
			CREATE_STRING_STUB( PF, B5G5R5UN );
			CREATE_STRING_STUB( PF, BGR5A1UN );
			CREATE_STRING_STUB( PF, BGRA8UN );
			CREATE_STRING_STUB( PF, BGRA8SRGB );
			CREATE_STRING_STUB( PF, RGB10A2UN );
			CREATE_STRING_STUB( PF, RGB10A2U );
			CREATE_STRING_STUB( PF, RG11B10F );
			CREATE_STRING_STUB( PF, RGBG8UN );
			CREATE_STRING_STUB( PF, GRGB8UN );
			CREATE_STRING_STUB( PF, BC1UN );
			CREATE_STRING_STUB( PF, BC1SRGB );
			CREATE_STRING_STUB( PF, BC2UN );
			CREATE_STRING_STUB( PF, BC2SRGB );
			CREATE_STRING_STUB( PF, BC3UN );
			CREATE_STRING_STUB( PF, BC3SRGB );
			CREATE_STRING_STUB( PF, BC4UN );
			CREATE_STRING_STUB( PF, BC4SN );
			CREATE_STRING_STUB( PF, BC5UN );
			CREATE_STRING_STUB( PF, BC5SN );
			CREATE_STRING_STUB( PF, BC6UN );
			CREATE_STRING_STUB( PF, BC6SN );
			CREATE_STRING_STUB( PF, BC7UN );
			CREATE_STRING_STUB( PF, BC7SRGB );
			CREATE_STRING_STUB( PF, D16 );
			CREATE_STRING_STUB( PF, D24S8 );
			CREATE_STRING_STUB( PF, D32F );
		}
	}
}